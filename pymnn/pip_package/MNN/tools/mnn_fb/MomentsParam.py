# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MNN

import flatbuffers

class MomentsParam(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsMomentsParam(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = MomentsParam()
        x.Init(buf, n + offset)
        return x

    # MomentsParam
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # MomentsParam
    def Dim(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Int32Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 4))
        return 0

    # MomentsParam
    def DimAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Int32Flags, o)
        return 0

    # MomentsParam
    def DimLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # MomentsParam
    def KeepDims(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return True

    # MomentsParam
    def DType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 1

def MomentsParamStart(builder): builder.StartObject(3)
def MomentsParamAddDim(builder, dim): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(dim), 0)
def MomentsParamStartDimVector(builder, numElems): return builder.StartVector(4, numElems, 4)
def MomentsParamAddKeepDims(builder, keepDims): builder.PrependBoolSlot(1, keepDims, 1)
def MomentsParamAddDType(builder, dType): builder.PrependInt32Slot(2, dType, 1)
def MomentsParamEnd(builder): return builder.EndObject()
