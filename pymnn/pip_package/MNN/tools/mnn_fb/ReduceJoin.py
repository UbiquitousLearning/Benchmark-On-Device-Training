# automatically generated by the FlatBuffers compiler, do not modify

# namespace: MNN

import flatbuffers

class ReduceJoin(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsReduceJoin(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ReduceJoin()
        x.Init(buf, n + offset)
        return x

    # ReduceJoin
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ReduceJoin
    def KeepDims(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # ReduceJoin
    def Separator(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def ReduceJoinStart(builder): builder.StartObject(2)
def ReduceJoinAddKeepDims(builder, keepDims): builder.PrependBoolSlot(0, keepDims, 0)
def ReduceJoinAddSeparator(builder, separator): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(separator), 0)
def ReduceJoinEnd(builder): return builder.EndObject()
